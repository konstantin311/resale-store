name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test_db
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Wait for PostgreSQL
      run: |
        # Установка утилиты для проверки доступности порта
        sudo apt-get update && sudo apt-get install -y netcat-openbsd
        
        # Ожидание доступности PostgreSQL
        echo "Waiting for PostgreSQL to be ready..."
        while ! nc -z localhost 5432; do
          sleep 1
        done
        echo "PostgreSQL is ready!"
        
        # Проверка возможности подключения к базе данных
        PGPASSWORD=postgres psql -h localhost -U postgres -d test_db -c '\l' || exit 1
        
    - name: Run tests
      env:
        DB_HOST: localhost
        DB_PORT: 5432
        DB_USER: postgres
        DB_PASSWORD: postgres
        DB_NAME: test_db
      run: |
        # Запуск тестов с повторными попытками в случае ошибок подключения
        for i in {1..3}; do
          if pytest --cov=. --cov-report=xml; then
            echo "Tests passed successfully!"
            exit 0
          fi
          echo "Attempt $i failed. Waiting before retry..."
          sleep 5
        done
        echo "All test attempts failed"
        exit 1
        
    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        fail_ci_if_error: true 